# Note that indentation is crucial in .yml files

es:

  layouts:
    application:
      title: "Publicaciones de Pragmatic"
      home: "Inicio"
      mycart: "Mi Carrito"
      products: "Productos"
      questions: "Preguntas"
      news: "Noticias"
      contact: "Contacto"

  store:
    index:
      title_html: "Su Cat&aacute;logo de Pragmatic"
      add_html: "A&ntilde;adir al Carrito"

  # Note that since title_html and add_html end in the characters _html, we are free to
  # use HTML entity names for characters that do not appear on our keyboard.
  # If we did not name the translation key this way, what you would end up seeing
  # on the page is the markup. This is yet another convention that Rails has
  # adopted to make your coding life easier. Rails will also treat names that contain
  # html as a component (in other words, the string .html.) as HTML key names.

  carts:
    cart:
      title: "Carrito de la Compra"
      empty: "Vaciar Carrito"
      checkout: "Comprar"


  number:
    currency:
      format:
        unit: "€"
        precision: 2
        separator: ","
        delimiter: "."
        format: "%n&nbsp;%u"

  # We’ve specified the unit, precision, separator, and delimiter for number.currency.
  # format. That much is pretty self-explanatory. The format is a bit more involved:
  # %n is a placeholder for the number; &nbsp; is a nonbreaking space character,
  # preventing this value from being split across multiple lines; and %u is a
  # placeholder for the unit

  time:
    formats:
      default:     "%Y/%m/%d"
      short:       "%b %d"
      long:        "%B %d, %Y"


  orders:
    new:
      legend: "Por favor, introduzca sus datos"
    form:
      name: "Nombre"
      address_html: "Direcci&oacute;n"
      email: "E-mail"
      pay_type: "Forma de pago" #this is for the form
      pay_prompt_html: "Seleccione un m&eacute;todo de pago"
      submit: "Realizar Pedido"
        # payment_types:
        #   check: "Check"
        #   credit_card: "Credit Card"
        #   purchase_order: "Purchase Order"

  activerecord:
    errors:
      messages:
        inclusion: "no est&aacute; incluido en la lista"
        blank: "no puede quedar en blanco"
    models:
      order: "pedido"
    attributes:
      order:
        address: "Direcci&oacute;n"
        name: "Nombre"
        email: "E-mail"
        pay_type: "Forma de pago" #this is for the error

  errors:
    template:
      header:
        one: "1 error ha impedido que este %{model} se guarde"
        other: "%{count} errores han impedido que este %{model} se guarde"
      body: "Hay problemas con los siguientes campos:"


  thanks: "Gracias por su pedido"
